services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
    networks:
      - finlimit_network

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    restart: always
    environment:
      - CASSANDRA_CLUSTER_NAME=FinLimitCluster
      - CASSANDRA_DC=datacenter1
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "SELECT release_version FROM system.local" ]
      interval: 15s
      retries: 5
      timeout: 10s
    networks:
      - finlimit_network

  app:
    image: finlimit-app:latest
    container_name: finlimit-app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_CASSANDRA_CONTACT_POINTS: cassandra
      SPRING_CASSANDRA_PORT: 9042
      SPRING_CASSANDRA_KEYSPACE_NAME: ervy_keyspace
      SPRING_CASSANDRA_LOCAL_DATACENTER: datacenter1
      TWELVEDATA_API_URL: ${API_URL}
      TWELVEDATA_API_KEY: ${KEY_API}
    ports:
      - "8080:8080"
    networks:
      - finlimit_network

volumes:
  postgres_data:
  cassandra_data:

networks:
  finlimit_network:
    driver: bridge